// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

generator erd {
  provider = "prisma-erd-generator"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output = "../docs"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int              @id @default(autoincrement())
  name      String?
  email     String           @unique
  meetups   UsersOnMeetups[]
  profile   Profile?
  inviter   User[]           @relation("friendship")
  invited   User[]           @relation("friendship")
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  password  String
  g1        GameMatrix[]     @relation("p1")
  g2        GameMatrix[]     @relation("p2")
  role      Role             @default(USER)
}

enum Role {
  ADMIN
  USER
  ANON
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Meetup {
  id          Int              @id @default(autoincrement())
  title       String
  image       String?
  address     String
  description String?
  users       UsersOnMeetups[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model UsersOnMeetups {
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  meetupId  Int
  meetup    Meetup   @relation(fields: [meetupId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, meetupId])
}

model GameMatrix {
  id      Int         @id @default(autoincrement())
  player1 User        @relation(name: "p1", fields: [p1Id], references: [id])
  p1Id    Int
  player2 User        @relation(name: "p2", fields: [p2Id], references: [id])
  p2Id    Int
  cells   GameCells[]
}

model GameCells {
  i            Int
  j            Int
  value        String
  GameMatrix   GameMatrix? @relation(fields: [gameMatrixId], references: [id])
  gameMatrixId Int?

  @@id([i, j])
}
